import os
from datetime import datetime

from shire_calendar import calendar
import sr, sr_entries, sr_html, sr_moon
from sr_tricks import *

# As the main content of the page we display a series of dated entries
# beginning with any for "today" and going backwards, digging back far
# enough to find an entry that mentions every major character.

# We call "td" for each of the large <td> elements that make up the
# body of the page, lying beneath the banner; there should always be
# three.  This routine makes sure that the left and right ones have
# different border settings than the middle one.

tdn = 1
def td [plain] (width=None, add_class=None):
    global tdn
    if tdn == 1:
        c = "bord rbord"
    elif tdn == 2:
        c = "bord lbord rbord"
    else:
        c = "bord lbord"
    if add_class is not None:
        c = c + ' ' + add_class
    '<td class="%s"' % c
    if width is not None:
        'width="%s%%"' % width
    '>'
    tdn += 1

def phase_name [plain] (phase):
    if phase < 0.25:
        'Waxing Crescent'
    elif phase < 0.5:
        'Waxing Gibbous'
    elif phase < 0.75:
        'Waning Gibbous'
    else:
        'Waning Crescent'

def format_entries [plain] (today, width):

    td(width, 'roll')
    '<p align=center><b>In the year S.R. %d</b></p>' % today.year

    # Put the entries together by date.

    def format [plain] (entries, date):
        e0 = entries[0]
        date = e0.date

        if e0.through:
            return
            '<table summary="foo" width="100%" class=datespan>'
            '<tr><td class=datespan colspan=2>'

            '<b>'
            date.name
            '&nbsp;&mdash;&nbsp;'
            e0.through.name
            '</b>'

            '<tr><td>'
            ''.join( entry.render() for entry in reversed(entries) )
            '</td></tr></table>'

        else:
            '<div class=foo></div>'
            '<table summary="%s" class=date>' % date.name
            '<tr><td colspan=2 class=date>'
            nbsp(date.name)

            '<tr><td colspan=2 class=detail>'
            if date == today:
                '(today)'
            else:
                n = today - date
                if n > 1:
                    nbsp('(%d days ago)' % n)
                else:
                    '(yesterday)'

            '<br><a href="archive-%d-%s#d%d">&rarr;archive</a>' % (
                date.year, date.month, date.day)
            '<tr class=moon><td>'
            phase = sr_moon.phase(date)
            sr_moon.img(phase)
            '<td>'
            nbsp('<i>%s</i>' % phase_name(phase).replace(' ', '<br>'))
            #nbsp(phase_name(phase)))

            '</table>'

            ''.join( entry.render() for entry in reversed(entries) )

    entries = sr_entries.lastfew(today, 8)
    for entry_group in sr_entries.group_by_date(entries):
        format(entry_group, today)

def compose [plain] ():
    sr_html.start(title='The Shire-Reckoning')

    with open(os.path.dirname(__file__) + '/index.html') as f:
        f.read()
